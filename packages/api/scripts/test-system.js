import prisma from '../src/config/database.js';

/**
 * Script de test pour v√©rifier le syst√®me Awards/Quiz
 */
async function testSystem() {
  console.log('üß™ Test du syst√®me Awards/Quiz...\n');

  try {
    // 1. V√©rifier les badges globaux
    console.log('1Ô∏è‚É£ V√©rification des badges globaux...');
    const globalBadges = await prisma.globalBadge.findMany();
    console.log(`   ‚úÖ ${globalBadges.length} badges globaux trouv√©s`);

    // 2. V√©rifier les r√©compenses globales
    console.log('2Ô∏è‚É£ V√©rification des r√©compenses globales...');
    const globalRewards = await prisma.globalReward.findMany();
    console.log(`   ‚úÖ ${globalRewards.length} r√©compenses globales trouv√©es`);

    // 3. V√©rifier les quiz
    console.log('3Ô∏è‚É£ V√©rification des quiz...');
    const quizzes = await prisma.readingQuiz.findMany({
      include: {
        questions: true,
        book: true
      }
    });
    console.log(`   ‚úÖ ${quizzes.length} quiz trouv√©s`);
    
    const totalQuestions = quizzes.reduce((sum, quiz) => sum + quiz.questions.length, 0);
    console.log(`   ‚úÖ ${totalQuestions} questions au total`);

    // 4. V√©rifier les groupes et leurs badges
    console.log('4Ô∏è‚É£ V√©rification des groupes...');
    const groups = await prisma.group.findMany({
      include: {
        groupBadges: true,
        groupRewards: true
      }
    });
    
    for (const group of groups) {
      console.log(`   üìÅ Groupe "${group.name}":`);
      console.log(`      - ${group.groupBadges.length} badges`);
      console.log(`      - ${group.groupRewards.length} r√©compenses`);
    }

    // 5. V√©rifier les utilisateurs et leurs badges
    console.log('5Ô∏è‚É£ V√©rification des utilisateurs...');
    const users = await prisma.user.findMany({
      where: { role: 'child' },
      include: {
        userBadges: {
          include: {
            badge: true
          }
        },
        quizAttempts: true
      }
    });
    
    for (const user of users) {
      console.log(`   üë§ Enfant "${user.name}":`);
      console.log(`      - ${user.userBadges.length} badges d√©bloqu√©s`);
      console.log(`      - ${user.quizAttempts.length} tentatives de quiz`);
      console.log(`      - ${user.totalPointsEarned || 0} points totaux`);
    }

    console.log('\nüéâ Tous les tests sont pass√©s avec succ√®s !');
    console.log('\nüìä R√©sum√©:');
    console.log(`   - ${globalBadges.length} badges globaux`);
    console.log(`   - ${globalRewards.length} r√©compenses globales`);
    console.log(`   - ${quizzes.length} quiz cr√©√©s`);
    console.log(`   - ${totalQuestions} questions g√©n√©r√©es`);
    console.log(`   - ${groups.length} groupes avec badges/r√©compenses`);
    console.log(`   - ${users.length} enfants avec progression`);

  } catch (error) {
    console.error('‚ùå Erreur lors des tests:', error);
    process.exit(1);
  } finally {
    await prisma.$disconnect();
  }
}

testSystem();

